{"version":3,"file":"static/js/76.dcaf169e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","services/TmbdApi.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"castList\":\"Cast_castList__ARoWn\",\"castItem\":\"Cast_castItem__-Jcfe\",\"character\":\"Cast_character__tKDlA\",\"name\":\"Cast_name__6UbFm\"};","import Loader from 'components/Loader/Loader';\nimport React, { useEffect } from 'react';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/TmbdApi';\nimport defaultImg from 'images/defaultImg.png';\n\nimport styles from './Cast.module.css';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [error, setError] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    const MovieCast = async () => {\n      try {\n        setIsLoading(true);\n        const movie = await fetchMovieCast(movieId);\n        setCast(movie);\n      } catch (error) {\n        setError('Something went wrong...');\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    MovieCast();\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loader />}\n      {error && <div>{error}</div>}\n      <ul className={styles.castList}>\n        {Array.isArray(cast) &&\n          cast?.map(castEl => {\n            return (\n              <li key={castEl.id} className={styles.castItem}>\n                <img\n                  src={\n                    castEl.profile_path\n                      ? `https://image.tmdb.org/t/p/w300${castEl.profile_path}`\n                      : defaultImg\n                  }\n                  alt={`${castEl.name} portrait`}\n                />\n                <p className={styles.name}>{castEl.name}</p>\n                <p className={styles.character}>{castEl.character} </p>\n              </li>\n            );\n          })}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n","import axios from 'axios';\n\nconst KEY = 'ee56db8892f559717fc3072a85c6d9f5';\naxios.defaults.baseURL = 'https://api.themoviedb.org/3/';\naxios.defaults.params = { api_key: KEY };\n\nexport async function fetchTrending() {\n  const response = await axios.get('trending/movie/day');\n  //   console.log(response.data);\n  return response.data.results;\n}\nexport async function fetchSearchMovieByWord(query = 'film') {\n  const response = await axios(\n    `search/movie?query=${query}&include_adult=false&language=en-US&page=1`\n  );\n  //   console.log(response.data.results);\n  return response.data.results;\n}\nexport async function fetchMovieDetails(movie_id = '507089') {\n  const response = await axios(`movie/${movie_id}?language=en-US`);\n  //   console.log(response.data);\n  return response.data;\n}\n\nexport async function fetchMovieCast(movie_id = '507089') {\n  const response = await axios(`movie/${movie_id}/credits?language=en-US`);\n  //   console.log(response.data);\n  return response.data.cast;\n}\nexport async function fetchMovieReviews(movie_id = '507089') {\n  const response = await axios(\n    `movie/${movie_id}/reviews?language=en-US&page=1`\n  );\n  //   console.log(response.data);\n  return response.data.results;\n}\n"],"names":["movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","_useState3","_useState4","error","setError","_useState5","_useState6","isLoading","setIsLoading","useEffect","MovieCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","movie","_context","prev","next","fetchMovieCast","sent","t0","finish","stop","apply","arguments","_jsxs","_Fragment","children","_jsx","Loader","className","styles","Array","isArray","map","castEl","src","profile_path","concat","defaultImg","alt","name","character","id","fetchTrending","_fetchTrending","response","axios","abrupt","data","results","fetchSearchMovieByWord","_fetchSearchMovieByWord","_callee2","query","_args2","_context2","length","undefined","fetchMovieDetails","_fetchMovieDetails","_callee3","movie_id","_args3","_context3","_fetchMovieCast","_callee4","_args4","_context4","fetchMovieReviews","_fetchMovieReviews","_callee5","_args5","_context5","api_key"],"sourceRoot":""}